{"version":3,"sources":["SelectorPanel.js","TrackItem.js","TrackList.js","index.js"],"names":["SelectorPanel","props","state","showRoutes","showStops","selectedRouteValue","selectedStopValue","tmpShowRoutes","console","log","Object","entries","this","routes","forEach","item","route","text","orig_tc","dest_tc","push","value","label","setState","Autocomplete","options","getOptionLabel","option","renderInput","params","TextField","variant","onChange","e","newValue","tmpShowStops","mappings","bound","mapping","stop","stops","name_tc","handleRouteChange","handleStopChange","Button","disabled","style","width","onClick","addTrack","React","Component","TrackItem","etas","updateEta","fetch","track","url","then","res","json","myJson","data","tmpEtas","now","Date","record","dir","tmpEta","Math","round","eta","length","setInterval","onContextMenu","removeTrack","fontSize","marginBottom","borderRadius","aspectRatio","maxWidth","backgroundColor","display","flexDirection","margin","justifyContent","alignItems","padding","orig","dest","map","index","TrackList","tracks","created","App","debug","initData","targetName","ls","window","localStorage","getItem","JSON","parse","fetchData","dict","setItem","stringify","type","clear","a","b","c","newTrack","alreadyExists","msg","toast","warn","removeTrackRoute","tmpTracks","splice","indexOf","info","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5666d4aa.chunk.js","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import Select from 'react-select'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nclass SelectorPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        this.state = {\r\n            showRoutes: [],\r\n            showStops: [],\r\n\r\n            selectedRouteValue: null,\r\n            selectedStopValue: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let tmpShowRoutes = [];\r\n        console.log(\"loading\");\r\n        Object.entries(this.props.routes).forEach((item) => {\r\n            let route = item[1];\r\n            let text = route.route + \" : \" + route.orig_tc + \" -> \" + route.dest_tc;\r\n            tmpShowRoutes.push({ value: route, label: text });\r\n        });\r\n        this.setState({ showRoutes: tmpShowRoutes }, (() => { console.log(\"loading end\") }));\r\n    }\r\n    render() {\r\n        const handleRouteChange = (newValue) => {\r\n            let tmpShowStops = [];\r\n\r\n            // console.log(newValue.value);\r\n            let route = newValue.value;\r\n            // console.log(this.props.mappings[route.route + \"&\" + route.bound]);\r\n            let matchedMappings = this.props.mappings[route.route + \"&\" + route.bound];\r\n            matchedMappings.forEach((mapping) => {\r\n                // console.log(mapping);\r\n                let stop = this.props.stops[mapping.stop];\r\n                // console.log(stop);\r\n                tmpShowStops.push({ label: stop.name_tc, value: stop});\r\n            });\r\n\r\n            this.setState({\r\n                showStops: tmpShowStops,\r\n                selectedStopValue: null,\r\n                selectedRouteValue: newValue,\r\n            });\r\n        }\r\n        const handleStopChange = (newValue) => {\r\n            this.setState({\r\n                selectedStopValue: newValue,\r\n            })\r\n        }\r\n        const handleAddTrack = () => {\r\n            this.props.addTrack(this.state.selectedRouteValue.value, this.state.selectedStopValue.value);\r\n            this.setState({\r\n                selectedRouteValue: null,\r\n                selectedStopValue: null,\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    options={this.state.showRoutes}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Route\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleRouteChange(newValue) }}\r\n                    value={this.state.selectedRouteValue}\r\n                ></Autocomplete>\r\n                <Autocomplete\r\n                    options={this.state.showStops}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Stop\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleStopChange(newValue) }}\r\n                    value={this.state.selectedStopValue}\r\n                ></Autocomplete>\r\n                <Button disabled={this.state.selectedRouteValue === null || this.state.selectedStopValue === null} style={{ width: '100%' }} variant=\"outlined\" onClick={(e) => { handleAddTrack(e) }}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SelectorPanel;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass TrackItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            etas: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const updateEta = () => {\r\n            fetch(this.props.track.url)\r\n                .then(\r\n                    (res) => { return res.json() }\r\n                ).then((myJson) => {\r\n                    let data = myJson.data;\r\n                    let tmpEtas = [];\r\n                    let now = Date.now();\r\n                    data.forEach((record) => {\r\n                        if (record.dir === this.props.track.bound) {\r\n                            let tmpEta = Math.round((new Date(record.eta) - now) / 1000 / 60);\r\n                            if (tmpEta >= 0) {\r\n                                tmpEtas.push(tmpEta)\r\n                            }\r\n                        }\r\n                    });\r\n                    if (tmpEtas.length === 0) {\r\n                        tmpEtas.push(\"no car\");\r\n                    }\r\n                    this.setState({ etas: tmpEtas });\r\n                });\r\n        }\r\n        updateEta();\r\n        setInterval(() => {\r\n            updateEta();\r\n        }, 10000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div onContextMenu={() => { this.props.removeTrack(this.props.track.url) }} style={{ fontSize: \"10px\", marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n                <div style={{ width: \"20%\", margin: \"2.5%\", backgroundColor: \"lightgray\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n                    <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\" }}>{this.props.track.route}</div>\r\n                </div>\r\n                <div style={{ width: \"75%\", aspectRatio: \"3/1\" }}>{/*right section*/}\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n                        <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n                    </div>\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n                        <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n                            {this.props.track.stop}\r\n                        </div>\r\n                        <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n                            {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n                            {\r\n                                this.state.etas.map((eta, index) => (\r\n                                    <div key={index} style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            // <div style={{marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n            //     <div style={{ backgroundColor: \"lightgray\", margin: \"12px\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n            //         <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\"}}>{this.props.track.route}</div>\r\n            //     </div>\r\n            //     <div style={{ aspectRatio: \"3/1\" }}>{/*right section*/}\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n            //             <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n            //         </div>\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n            //             <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n            //                 {this.props.track.stop}\r\n            //             </div>\r\n            //             <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n            //                 {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n            //                 {\r\n            //                     this.state.etas.map((eta) => (\r\n            //                         <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n            //                     ))\r\n            //                 }\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackItem;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport TrackItem from './TrackItem';\r\n\r\nclass TrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" ,padding: \"10px 0\"}}>\r\n                {\r\n                    this.props.tracks!==null\r\n                    ?\r\n                    this.props.tracks.map((track)=>(\r\n                        <TrackItem key={track.created} track={track} removeTrack={this.props.removeTrack}></TrackItem>\r\n                    ))\r\n                    :\"\"\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import TrackItem from \"./TrackItem\";\r\nimport SelectorPanel from \"./SelectorPanel\";\r\nimport TrackList from \"./TrackList\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst routesUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route/\";\r\nconst stopsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/stop\"\r\nconst mappingsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route-stop\";\r\n\r\nconst fetchData = (url) => {\r\n    return fetch(url)\r\n        .then(\r\n            (res) => { return res.json() }\r\n        )\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes: null,\r\n            stops: null,\r\n            mappings: null,\r\n\r\n            tracks: null,\r\n\r\n            debug: \"init\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const initData = (targetName, url) => {\r\n            let ls = window.localStorage;\r\n            let item = ls.getItem(\"eta-react-\" + targetName)\r\n            if (item) {\r\n                console.log(\"load \" + targetName + \" from localStorage\");\r\n                this.setState({\r\n                    [targetName]: JSON.parse(item)\r\n                })\r\n            } else {\r\n                if (url) {\r\n                    console.log(\"load \" + targetName + \" from internet\");\r\n                    fetchData(url).then(\r\n                        (json) => {\r\n                            let data = json.data;\r\n                            let dict = {};\r\n                            if (targetName === \"routes\") {\r\n                                data.forEach((route) => {\r\n                                    dict[route.route + \"&\" + route.bound] = route;\r\n                                })\r\n                            }\r\n                            if (targetName === \"stops\") {\r\n                                data.forEach((stop) => {\r\n                                    dict[stop.stop] = stop;\r\n                                })\r\n                            }\r\n                            if (targetName === \"mappings\") {\r\n                                data.forEach((mapping) => {\r\n                                    if(!dict[mapping.route + \"&\" + mapping.bound]) {\r\n                                        dict[mapping.route + \"&\" + mapping.bound] = [];\r\n                                    }\r\n                                    dict[mapping.route + \"&\" + mapping.bound].push(mapping);\r\n                                })\r\n                            }\r\n                            ls.setItem(\"eta-react-\" + targetName, JSON.stringify(dict));\r\n                            this.setState({\r\n                                [targetName]: dict\r\n                            })\r\n                        }\r\n                    );\r\n                } else {\r\n                    console.log(\"store empty \" + targetName + \" to localStorage\");\r\n                    let data = [];\r\n                    this.setState({\r\n                        [targetName]: data\r\n                    })\r\n                    ls.setItem(\"eta-react-\" + targetName, JSON.stringify(data));\r\n                }\r\n            }\r\n        }\r\n        //init\r\n        initData(\"routes\", routesUrl);\r\n        initData(\"stops\", stopsUrl);\r\n        initData(\"mappings\", mappingsUrl);\r\n        initData(\"tracks\", null);\r\n    }\r\n    render() {\r\n        const notifyInfo = (msg) => toast.info(msg);\r\n        const notifyWarn = (msg) => toast.warn(msg);\r\n        const addTrack = (route, stop) => {\r\n            if (route !== null && stop !== null) {\r\n                let newTrack = {\r\n                    created: new Date(),\r\n                    route: route.route,\r\n                    orig: route.orig_tc,\r\n                    dest: route.dest_tc,\r\n                    stop: stop.name_tc,\r\n                    bound: route.bound,\r\n                    url: `https://data.etabus.gov.hk/v1/transport/kmb/eta/${stop.stop}/${route.route}/1`,\r\n                };\r\n                // console.log(newTrack);\r\n                let alreadyExists = false;\r\n                this.state.tracks.forEach(track => {\r\n                    if (track.url === newTrack.url && track.bound === newTrack.bound) {\r\n                        alreadyExists = true;\r\n                    }\r\n                });\r\n                if (!alreadyExists) {\r\n                    this.setState({ tracks: [...this.state.tracks, newTrack] }, () => { window.localStorage.setItem(\"eta-react-tracks\", JSON.stringify(this.state.tracks)) });\r\n                } else {\r\n                    notifyWarn(\"track already exists\");\r\n                }\r\n            } else {\r\n                //err\r\n            }\r\n        }\r\n        const removeTrack = (url) => {\r\n            let tmpTracks = JSON.parse(JSON.stringify(this.state.tracks));\r\n            let removeTrackRoute;\r\n            tmpTracks.forEach((track) => {\r\n                if (track.url === url) {\r\n                    removeTrackRoute = track.route;\r\n                    tmpTracks.splice(tmpTracks.indexOf(track), 1);\r\n                }\r\n            })\r\n            // console.log(tmpTracks);\r\n            this.setState({ tracks: tmpTracks }, () => {\r\n                window.localStorage.setItem(\"eta-react-tracks\", JSON.stringify(this.state.tracks));\r\n                notifyInfo(\"removed \" + removeTrackRoute + \" track\")\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <pre>{this.state.debug}</pre>\r\n                <input type=\"text\" />\r\n                <code> Right click card to remove </code>\r\n                <br />\r\n                <code> Refresh rate: 10s</code>\r\n                <button onClick={()=>{window.localStorage.clear();}}>DEBUG</button>\r\n                <button onClick={() => {\r\n                    let a = JSON.parse(window.localStorage.getItem(\"eta-react-routes\"))[\"968&I\"];\r\n                    let b = JSON.parse(window.localStorage.getItem(\"eta-react-stops\"))[\"B7773ED8D2FC08E5\"];\r\n                    let c = JSON.parse(window.localStorage.getItem(\"eta-react-mappings\"))[\"968&I\"];\r\n                    this.setState({ debug: JSON.stringify(a) + \"\\n\" + JSON.stringify(b) + \"\\n\" + JSON.stringify(c[0])});\r\n                }}>abc</button>\r\n                {\r\n                    this.state.routes\r\n                        ?\r\n                        <SelectorPanel\r\n                            addTrack={addTrack}\r\n                            routes={this.state.routes}\r\n                            stops={this.state.stops}\r\n                            mappings={this.state.mappings} />\r\n                        : \"\"\r\n                }\r\n                <TrackList\r\n                    tracks={this.state.tracks}\r\n                    removeTrack={removeTrack}\r\n                />\r\n                <ToastContainer position=\"bottom-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick rtl={false}\r\n                    pauseOnFocusLoss draggable pauseOnHover\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<\r\n    App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}