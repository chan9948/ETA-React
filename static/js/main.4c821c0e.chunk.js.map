{"version":3,"sources":["TrackItem.js","SelectorPanel.js","index.js","TrackList.js"],"names":["TrackItem","React","Component","props","state","etas","updateEta","fetch","track","url","then","res","json","myJson","data","tmpEtas","now","Date","forEach","record","dir","bound","tmpEta","Math","round","eta","push","length","setState","setInterval","onContextMenu","removeTrack","style","fontSize","marginBottom","borderRadius","aspectRatio","width","maxWidth","backgroundColor","display","flexDirection","margin","justifyContent","alignItems","padding","this","route","orig","dest","stop","map","index","App","routes","stops","mappings","tracks","debug","initData","targetName","ls","window","localStorage","item","getItem","console","log","JSON","parse","fetchData","dict","setItem","stringify","onClick","t","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c821c0e.chunk.js","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass TrackItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            etas: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const updateEta = () => {\r\n            fetch(this.props.track.url)\r\n                .then(\r\n                    (res) => { return res.json() }\r\n                ).then((myJson) => {\r\n                    let data = myJson.data;\r\n                    let tmpEtas = [];\r\n                    let now = Date.now();\r\n                    data.forEach((record) => {\r\n                        if (record.dir === this.props.track.bound) {\r\n                            let tmpEta = Math.round((new Date(record.eta) - now) / 1000 / 60);\r\n                            if (tmpEta >= 0) {\r\n                                tmpEtas.push(tmpEta)\r\n                            }\r\n                        }\r\n                    });\r\n                    if (tmpEtas.length === 0) {\r\n                        tmpEtas.push(\"no car\");\r\n                    }\r\n                    this.setState({ etas: tmpEtas });\r\n                });\r\n        }\r\n        updateEta();\r\n        setInterval(() => {\r\n            updateEta();\r\n        }, 10000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div onContextMenu={() => { this.props.removeTrack(this.props.track.url) }} style={{ fontSize: \"10px\", marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n                <div style={{ width: \"20%\", margin: \"2.5%\", backgroundColor: \"lightgray\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n                    <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\" }}>{this.props.track.route}</div>\r\n                </div>\r\n                <div style={{ width: \"75%\", aspectRatio: \"3/1\" }}>{/*right section*/}\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n                        <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n                    </div>\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n                        <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n                            {this.props.track.stop}\r\n                        </div>\r\n                        <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n                            {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n                            {\r\n                                this.state.etas.map((eta, index) => (\r\n                                    <div key={index} style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            // <div style={{marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n            //     <div style={{ backgroundColor: \"lightgray\", margin: \"12px\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n            //         <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\"}}>{this.props.track.route}</div>\r\n            //     </div>\r\n            //     <div style={{ aspectRatio: \"3/1\" }}>{/*right section*/}\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n            //             <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n            //         </div>\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n            //             <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n            //                 {this.props.track.stop}\r\n            //             </div>\r\n            //             <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n            //                 {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n            //                 {\r\n            //                     this.state.etas.map((eta) => (\r\n            //                         <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n            //                     ))\r\n            //                 }\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackItem;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport Select from 'react-select'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nclass SelectorPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        this.state = {\r\n            showRoutes: [],\r\n            showStops: [],\r\n\r\n            selectedRoute: null,\r\n            selectedStop: null,\r\n\r\n            routeValue: null,\r\n            stopValue: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let tmpShowRoutes = [];\r\n        console.log(\"loading\");\r\n        this.props.routes.forEach((item) => {\r\n            let text = item.route + \" : \" + item.orig_tc + \" -> \" + item.dest_tc;\r\n            tmpShowRoutes.push({ value: item, label: text });\r\n        });\r\n        this.setState({ showRoutes: tmpShowRoutes }, (() => { console.log(\"loading end\") }));\r\n    }\r\n    render() {\r\n        const handleRouteChange = (e) => {\r\n            let tmpShowStops = [];\r\n            this.props.mappings.forEach((mapping) => {\r\n                // console.log(mapping);\r\n                if (mapping.route === e.value.route && mapping.bound === e.value.bound) {\r\n                    this.props.stops.forEach((stop) => {\r\n                        if (mapping.stop === stop.stop) {\r\n                            tmpShowStops.push({ value: stop, label: stop.name_tc });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            this.setState({\r\n                showStops: tmpShowStops,\r\n                stopValue: null,\r\n                selectedStop: null,\r\n                selectedRoute: e.value,\r\n                routeValue: { value: e.value, label: e.label }\r\n            });\r\n        }\r\n        const handleStopChange = (e) => {\r\n            this.setState({\r\n                selectedStop: e.value,\r\n                stopValue: { value: e.value, label: e.label }\r\n            })\r\n        }\r\n        const handleAddTrack = () => {\r\n            this.props.addTrack(this.state.selectedRoute, this.state.selectedStop);\r\n            this.setState({\r\n                selectedRoute: null,\r\n                selectedStop: null,\r\n                routeValue: null,\r\n                stopValue: null,\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <Autocomplete\r\n                    options={this.state.showRoutes}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Route\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleRouteChange(newValue) }}\r\n                    value={this.state.routeValue}\r\n                ></Autocomplete>\r\n                <Autocomplete\r\n                    options={this.state.showStops}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Stop\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleStopChange(newValue) }}\r\n                    value={this.state.stopValue}\r\n                ></Autocomplete>\r\n                <Button disabled={this.state.selectedRoute == null || this.state.selectedStop == null} style={{ width: '100%' }} variant=\"outlined\" onClick={(e) => { handleAddTrack(e) }}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SelectorPanel;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import TrackItem from \"./TrackItem\";\r\nimport SelectorPanel from \"./SelectorPanel\";\r\nimport TrackList from \"./TrackList\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst routesUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route/\";\r\nconst stopsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/stop\"\r\nconst mappingsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route-stop\";\r\n\r\nconst fetchData = (url) => {\r\n    return fetch(url)\r\n        .then(\r\n            (res) => { return res.json() }\r\n        )\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes: null,\r\n            stops: null,\r\n            mappings: null,\r\n\r\n            tracks: null,\r\n\r\n            debug: \"init\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const initData = (targetName, url) => {\r\n            let ls = window.localStorage;\r\n            let item = ls.getItem(targetName)\r\n            if (item) {\r\n                console.log(\"load \" + targetName + \" from localStorage\");\r\n                this.setState({\r\n                    [targetName]: JSON.parse(item)\r\n                })\r\n            } else {\r\n                if (url) {\r\n                    console.log(\"load \" + targetName + \" from internet\");\r\n                    fetchData(url).then(\r\n                        (json) => {\r\n                            let data = json.data;\r\n                            let dict = {};\r\n                            if (targetName === \"routes\") {\r\n                                data.forEach((route) => {\r\n                                    dict[route.route + \"&\" + route.bound] = route;\r\n                                })\r\n                            }\r\n\r\n                            ls.setItem(targetName, JSON.stringify(dict));\r\n                            this.setState({\r\n                                [targetName]: dict\r\n                            })\r\n                        }\r\n                    );\r\n                } else {\r\n                    console.log(\"store empty \" + targetName + \" to localStorage\");\r\n                    let data = [];\r\n                    this.setState({\r\n                        [targetName]: data\r\n                    })\r\n                    ls.setItem(targetName, JSON.stringify(data));\r\n                }\r\n            }\r\n        }\r\n        //init\r\n        initData(\"routes\", routesUrl);\r\n        initData(\"stops\", stopsUrl);\r\n        initData(\"mappings\", mappingsUrl);\r\n        initData(\"tracks\", null);\r\n    }\r\n    render() {\r\n        const notifyInfo = (msg) => toast.info(msg);\r\n        const notifyWarn = (msg) => toast.warn(msg);\r\n        const addTrack = (route, stop) => {\r\n            if (route !== null && stop !== null) {\r\n                let newTrack = {\r\n                    created: new Date(),\r\n                    route: route.route,\r\n                    orig: route.orig_tc,\r\n                    dest: route.dest_tc,\r\n                    stop: stop.name_tc,\r\n                    bound: route.bound,\r\n                    url: `https://data.etabus.gov.hk/v1/transport/kmb/eta/${stop.stop}/${route.route}/1`,\r\n                };\r\n                // console.log(newTrack);\r\n                let alreadyExists = false;\r\n                this.state.tracks.forEach(track => {\r\n                    if (track.url === newTrack.url && track.bound === newTrack.bound) {\r\n                        alreadyExists = true;\r\n                    }\r\n                });\r\n                if (!alreadyExists) {\r\n                    this.setState({ tracks: [...this.state.tracks, newTrack] }, () => { window.localStorage.setItem(\"tracks\", JSON.stringify(this.state.tracks)) });\r\n                } else {\r\n                    notifyWarn(\"track already exists\");\r\n                }\r\n            } else {\r\n                //err\r\n            }\r\n        }\r\n        const removeTrack = (url) => {\r\n            let tmpTracks = JSON.parse(JSON.stringify(this.state.tracks));\r\n            let removeTrackRoute;\r\n            tmpTracks.forEach((track) => {\r\n                if (track.url === url) {\r\n                    removeTrackRoute = track.route;\r\n                    tmpTracks.splice(tmpTracks.indexOf(track), 1);\r\n                }\r\n            })\r\n            // console.log(tmpTracks);\r\n            this.setState({ tracks: tmpTracks }, () => {\r\n                window.localStorage.setItem(\"tracks\", JSON.stringify(this.state.tracks));\r\n                notifyInfo(\"removed \" + removeTrackRoute + \" track\")\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <p>{this.state.debug}</p>\r\n                <code> Right click card to remove </code>\r\n                <br />\r\n                <code> Refresh rate: 10s</code>\r\n                <button onClick={() => {\r\n                    let t = JSON.parse(window.localStorage.getItem(\"routes\"))[\"3X&O\"];\r\n                    console.log(t);\r\n                    this.setState({debug: JSON.stringify(t)});\r\n                }}>a</button>\r\n                {/* {\r\n                    this.state.routes\r\n                        ?\r\n                        <SelectorPanel\r\n                            addTrack={addTrack}\r\n                            routes={this.state.routes}\r\n                            stops={this.state.stops}\r\n                            mappings={this.state.mappings} />\r\n                        : \"\"\r\n                }\r\n                <TrackList\r\n                    tracks={this.state.tracks}\r\n                    removeTrack={removeTrack}\r\n\r\n                />\r\n                <ToastContainer position=\"bottom-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick rtl={false}\r\n                    pauseOnFocusLoss draggable pauseOnHover\r\n                /> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<\r\n    App />,\r\n    document.getElementById('root')\r\n);","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport TrackItem from './TrackItem';\r\n\r\nclass TrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" ,padding: \"10px 0\"}}>\r\n                {\r\n                    this.props.tracks!==null\r\n                    ?\r\n                    this.props.tracks.map((track)=>(\r\n                        <TrackItem key={track.created} track={track} removeTrack={this.props.removeTrack}></TrackItem>\r\n                    ))\r\n                    :\"\"\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackList;"],"sourceRoot":""}