{"version":3,"sources":["SelectorPanel.js","TrackItem.js","TrackList.js","index.js"],"names":["SelectorPanel","props","state","showRoutes","showStops","selectedRoute","selectedStop","t","tmpShowRoutes","JSON","parse","stringify","this","routes","setState","route","name_tc","value","onChange","e","console","log","target","Autocomplete","clearOnBlur","options","getOptionLabel","option","orig_tc","dest_tc","renderInput","params","TextField","label","variant","newValue","tmpShowStops","mappings","filter","mapping","bound","forEach","matchStop","stops","stop","push","stopValue","handleRouteChange","onBlur","Button","disabled","style","width","onClick","addTrack","React","Component","TrackItem","etas","updateEta","fetch","track","url","then","res","json","myJson","data","tmpEtas","now","Date","record","dir","tmpEta","Math","round","eta","length","setInterval","onContextMenu","removeTrack","fontSize","marginBottom","borderRadius","aspectRatio","maxWidth","backgroundColor","display","flexDirection","margin","justifyContent","alignItems","padding","orig","dest","map","index","TrackList","tracks","created","initData","THIS","targetName","ls","window","localStorage","item","getItem","fetchData","setItem","Promise","resolve","App","newTrack","alreadyExists","msg","toast","warn","removeTrackRoute","tmpTracks","splice","indexOf","info","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.881d5e0a.chunk.js","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import Select from 'react-select'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nclass SelectorPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        this.state = {\r\n            showRoutes: [],\r\n            showStops: [],\r\n\r\n            selectedRoute: null,\r\n            selectedStop: null,\r\n            t:\"ds\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let tmpShowRoutes = JSON.parse(JSON.stringify(this.props.routes));\r\n        this.setState({ showRoutes: tmpShowRoutes });\r\n    }\r\n    render() {\r\n        const handleRouteChange = (route) => {\r\n            let tmpShowStops = [];\r\n\r\n            let matchMappings = this.props.mappings.filter((mapping) =>\r\n                mapping.route === route.route && mapping.bound === route.bound\r\n            );\r\n\r\n            matchMappings.forEach((mapping) => {\r\n                let matchStop = this.props.stops.filter((stop) =>\r\n                    mapping.stop === stop.stop\r\n                )[0];\r\n                tmpShowStops.push(matchStop);\r\n            })\r\n\r\n            this.setState({\r\n                showStops: tmpShowStops,\r\n                stopValue: null,\r\n                selectedStop: null,\r\n                selectedRoute: route,\r\n            });\r\n        }\r\n        const handleStopChange = (stop) => {\r\n            this.setState({\r\n                selectedStop: stop\r\n            })\r\n        }\r\n        const handleAddTrack = () => {\r\n            this.props.addTrack(this.state.selectedRoute, this.state.selectedStop);\r\n            this.setState({\r\n                selectedRoute: null,\r\n                selectedStop: null,\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <p>08</p>\r\n                {\r\n                    this.state.selectedRoute\r\n                    ?<p>{this.state.selectedRoute.route}</p>\r\n                    :<p>null</p>\r\n                }\r\n                {\r\n                    this.state.selectedStop\r\n                    ?<p>{this.state.selectedStop.name_tc}</p>\r\n                    :<p>null</p>\r\n                }\r\n                <input value={this.state.t} onChange={(e)=>{console.log(e.target.value); this.setState({t:e.target.value})}}/>\r\n                <Autocomplete\r\n                    clearOnBlur={false}\r\n                    options={this.state.showRoutes}\r\n                    getOptionLabel={(option) => (option.orig_tc + \" -> \" + option.dest_tc)}\r\n                    renderInput={(params) => <TextField {...params} label=\"Route\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleRouteChange(newValue) }}\r\n                    onBlur={(e) => { console.log(e) }}\r\n                    value={this.state.selectedRoute}\r\n                ></Autocomplete>\r\n                <Autocomplete\r\n                    options={this.state.showStops}\r\n                    getOptionLabel={(option) => (option.name_tc)}\r\n                    renderInput={(params) => <TextField {...params} label=\"Stop\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleStopChange(newValue) }}\r\n                    value={this.state.selectedStop}\r\n                ></Autocomplete>\r\n                <Button disabled={this.state.selectedRoute == null || this.state.selectedStop == null} style={{ width: '100%' }} variant=\"outlined\" onClick={(e) => { handleAddTrack(e) }}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SelectorPanel;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass TrackItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            etas: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const updateEta = () => {\r\n            fetch(this.props.track.url)\r\n                .then(\r\n                    (res) => { return res.json() }\r\n                ).then((myJson) => {\r\n                    let data = myJson.data;\r\n                    let tmpEtas = [];\r\n                    let now = Date.now();\r\n                    data.forEach((record) => {\r\n                        if (record.dir === this.props.track.bound) {\r\n                            let tmpEta = Math.round((new Date(record.eta) - now) / 1000 / 60);\r\n                            if (tmpEta >= 0) {\r\n                                tmpEtas.push(tmpEta)\r\n                            }\r\n                        }\r\n                    });\r\n                    if (tmpEtas.length === 0) {\r\n                        tmpEtas.push(\"no car\");\r\n                    }\r\n                    this.setState({ etas: tmpEtas });\r\n                });\r\n        }\r\n        updateEta();\r\n        setInterval(() => {\r\n            updateEta();\r\n        }, 10000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div onContextMenu={() => { this.props.removeTrack(this.props.track.url) }} style={{ fontSize: \"10px\", marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n                <div style={{ width: \"20%\", margin: \"2.5%\", backgroundColor: \"lightgray\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n                    <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\" }}>{this.props.track.route}</div>\r\n                </div>\r\n                <div style={{ width: \"75%\", aspectRatio: \"3/1\" }}>{/*right section*/}\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n                        <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n                    </div>\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n                        <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n                            {this.props.track.stop}\r\n                        </div>\r\n                        <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n                            {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n                            {\r\n                                this.state.etas.map((eta, index) => (\r\n                                    <div key={index} style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            // <div style={{marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n            //     <div style={{ backgroundColor: \"lightgray\", margin: \"12px\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n            //         <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\"}}>{this.props.track.route}</div>\r\n            //     </div>\r\n            //     <div style={{ aspectRatio: \"3/1\" }}>{/*right section*/}\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n            //             <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n            //         </div>\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n            //             <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n            //                 {this.props.track.stop}\r\n            //             </div>\r\n            //             <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n            //                 {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n            //                 {\r\n            //                     this.state.etas.map((eta) => (\r\n            //                         <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n            //                     ))\r\n            //                 }\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackItem;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport TrackItem from './TrackItem';\r\n\r\nclass TrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" ,padding: \"10px 0\"}}>\r\n                {\r\n                    this.props.tracks!==null\r\n                    ?\r\n                    this.props.tracks.map((track)=>(\r\n                        <TrackItem key={track.created} track={track} removeTrack={this.props.removeTrack}></TrackItem>\r\n                    ))\r\n                    :\"\"\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import TrackItem from \"./TrackItem\";\r\nimport SelectorPanel from \"./SelectorPanel\";\r\nimport TrackList from \"./TrackList\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst routesUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route/\";\r\nconst stopsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/stop\"\r\nconst mappingsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route-stop\";\r\n\r\nconst fetchData = (url) => {\r\n    return fetch(url)\r\n        .then(\r\n            (res) => { return res.json() }\r\n        )\r\n}\r\n\r\nconst initData = (THIS, targetName, url) => {\r\n    let ls = window.localStorage;\r\n    let item = ls.getItem(targetName)\r\n    if (item) {\r\n        console.log(\"load \" + targetName + \" from localStorage\");\r\n        THIS.setState({\r\n            [targetName]: JSON.parse(item)\r\n        })\r\n    } else {\r\n        if (url) {\r\n            console.log(\"load \" + targetName + \" from internet\");\r\n            fetchData(url).then(\r\n                (json) => {\r\n                    let data = json.data;\r\n                    ls.setItem(targetName, JSON.stringify(data));\r\n                    THIS.setState({\r\n                        [targetName]: data\r\n                    })\r\n                }\r\n            );\r\n        } else {\r\n            console.log(\"store empty \" + targetName + \" to localStorage\");\r\n            let data = [];\r\n            THIS.setState({\r\n                [targetName]: data\r\n            })\r\n            ls.setItem(targetName, JSON.stringify(data));\r\n        }\r\n    }\r\n    return Promise.resolve();\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes: null,\r\n            stops: null,\r\n            mappings: null,\r\n\r\n            tracks: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //init\r\n        initData(this, \"routes\", routesUrl).then(() => { this.setState({ showRoutes: this.state.routes }) });\r\n        initData(this, \"stops\", stopsUrl).then(() => { this.setState({ showStops: this.state.stops }) });\r\n        initData(this, \"mappings\", mappingsUrl);\r\n        initData(this, \"tracks\", null);\r\n    }\r\n    render() {\r\n        const notifyInfo = (msg) => toast.info(msg);\r\n        const notifyWarn = (msg) => toast.warn(msg);\r\n        const addTrack = (route, stop) => {\r\n            if (route !== null && stop !== null) {\r\n                let newTrack = {\r\n                    created: new Date(),\r\n                    route: route.route,\r\n                    orig: route.orig_tc,\r\n                    dest: route.dest_tc,\r\n                    stop: stop.name_tc,\r\n                    bound: route.bound,\r\n                    url: `https://data.etabus.gov.hk/v1/transport/kmb/eta/${stop.stop}/${route.route}/1`,\r\n                };\r\n                // console.log(newTrack);\r\n                let alreadyExists = false;\r\n                this.state.tracks.forEach(track => {\r\n                    if (track.url === newTrack.url && track.bound === newTrack.bound) {\r\n                        alreadyExists = true;\r\n                    }\r\n                });\r\n                if (!alreadyExists) {\r\n                    this.setState({ tracks: [...this.state.tracks, newTrack] }, () => { window.localStorage.setItem(\"tracks\", JSON.stringify(this.state.tracks)) });\r\n                } else {\r\n                    notifyWarn(\"track already exists\");\r\n                }\r\n            } else {\r\n                //err\r\n            }\r\n        }\r\n        const removeTrack = (url) => {\r\n            let tmpTracks = JSON.parse(JSON.stringify(this.state.tracks));\r\n            let removeTrackRoute;\r\n            tmpTracks.forEach((track) => {\r\n                if (track.url === url) {\r\n                    removeTrackRoute = track.route;\r\n                    tmpTracks.splice(tmpTracks.indexOf(track), 1);\r\n                }\r\n            })\r\n            // console.log(tmpTracks);\r\n            this.setState({ tracks: tmpTracks }, () => {\r\n                window.localStorage.setItem(\"tracks\", JSON.stringify(this.state.tracks));\r\n                notifyInfo(\"removed \" + removeTrackRoute + \" track\")\r\n            });\r\n        }\r\n        return (<>\r\n            <code > Right click card to remove </code>\r\n            <br />\r\n            <code> Refresh rate: 10 s </code> {\r\n                this.state.routes ? <SelectorPanel addTrack={addTrack}\r\n                    routes={this.state.routes}\r\n                    stops={this.state.stops}\r\n                    mappings={this.state.mappings} > </SelectorPanel> \r\n                    : \"\"}\r\n            <TrackList tracks={this.state.tracks}\r\n                removeTrack={removeTrack} > </TrackList> <\r\n                ToastContainer position=\"bottom-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick rtl={false}\r\n                pauseOnFocusLoss draggable pauseOnHover /\r\n            >\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}