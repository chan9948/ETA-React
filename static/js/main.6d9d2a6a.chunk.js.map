{"version":3,"sources":["SelectorPanel.js","TrackItem.js","TrackList.js","index.js"],"names":["SelectorPanel","props","state","showRoutes","showStops","selectedRoute","selectedStop","routeValue","stopValue","list","label","value","name","age","pick","testList","debug","tmpShowRoutes","console","log","this","routes","forEach","item","text","route","orig_tc","dest_tc","push","setState","Autocomplete","options","getOptionLabel","option","renderInput","params","TextField","variant","onChange","e","newValue","matchMappings","mappings","mapping","bound","handleRouteChange","map","pair","name_tc","stop","index","Button","disabled","style","width","onClick","addTrack","React","Component","TrackItem","etas","updateEta","fetch","track","url","then","res","json","myJson","data","tmpEtas","now","Date","record","dir","tmpEta","Math","round","eta","length","setInterval","onContextMenu","removeTrack","fontSize","marginBottom","borderRadius","aspectRatio","maxWidth","backgroundColor","display","flexDirection","margin","justifyContent","alignItems","padding","orig","dest","TrackList","tracks","created","initData","THIS","targetName","ls","window","localStorage","getItem","JSON","parse","fetchData","setItem","stringify","Promise","resolve","App","stops","newTrack","alreadyExists","msg","toast","warn","removeTrackRoute","tmpTracks","splice","indexOf","info","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d9d2a6a.chunk.js","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport Select from 'react-select'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nclass SelectorPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        this.state = {\r\n            showRoutes: [],\r\n            showStops: [],\r\n\r\n            selectedRoute: null,\r\n            selectedStop: null,\r\n\r\n            routeValue: null,\r\n            stopValue: null,\r\n\r\n\r\n            list: [\r\n                { label: \"A\", value: { name: \"AAA\", age: 100 } },\r\n                { label: \"B\", value: { name: \"BBB\", age: 8080 } },\r\n                { label: \"C\", value: { name: \"CCC\", age: 999 } },\r\n            ],\r\n            pick: null,\r\n            testList: [],\r\n            debug: \"init\",\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let tmpShowRoutes = [];\r\n        console.log(\"loading\");\r\n        this.props.routes.forEach((item) => {\r\n            let text = item.route + \" : \" + item.orig_tc + \" -> \" + item.dest_tc;\r\n            tmpShowRoutes.push({ value: item, label: text });\r\n        });\r\n        this.setState({ showRoutes: tmpShowRoutes }, (() => { console.log(\"loading end\") }));\r\n    }\r\n    render() {\r\n        const handleRouteChange = (newValue) => {\r\n            let tmpShowStops = [];\r\n            let matchMappings = [];\r\n            \r\n            this.setState({debug: \"a\"});\r\n\r\n            this.props.mappings.forEach((mapping) => {\r\n                if (mapping.route === newValue.value.route && mapping.bound === newValue.value.bound) {\r\n                    matchMappings.push(mapping);\r\n                }\r\n            });\r\n            this.setState({debug: \"b\"});\r\n\r\n            this.setState({\r\n                showStops: tmpShowStops,\r\n                stopValue: null,\r\n                selectedStop: null,\r\n                selectedRoute: newValue,\r\n                testList: matchMappings,\r\n            });\r\n            \r\n            this.setState({debug: \"c\"});\r\n            \r\n            // let tmpShowStops = [];\r\n            // this.props.mappings.forEach((mapping) => {\r\n            //     if (mapping.route === newValue.value.route && mapping.bound === newValue.value.bound) {\r\n            //         this.props.stops.forEach((stop) => {\r\n            //             if (mapping.stop === stop.stop) {\r\n            //                 tmpShowStops.push({ value: stop, label: stop.name_tc });\r\n            //             }\r\n            //         })\r\n            //     }\r\n            // })\r\n            // this.setState({\r\n            //     showStops: tmpShowStops,\r\n            //     stopValue: null,\r\n            //     selectedStop: null,\r\n            //     selectedRoute: newValue,\r\n            // });\r\n        }\r\n        // const handleRouteChange = (e) => {\r\n        //     let tmpShowStops = [];\r\n        //     this.props.mappings.forEach((mapping) => {\r\n        //         // console.log(mapping);\r\n        //         if (mapping.route === e.value.route && mapping.bound === e.value.bound) {\r\n        //             this.props.stops.forEach((stop) => {\r\n        //                 if (mapping.stop === stop.stop) {\r\n        //                     tmpShowStops.push({ value: stop, label: stop.name_tc });\r\n        //                 }\r\n        //             })\r\n        //         }\r\n        //     })\r\n        //     this.setState({\r\n        //         showStops: tmpShowStops,\r\n        //         stopValue: null,\r\n        //         selectedStop: null,\r\n        //         selectedRoute: e.value,\r\n        //         routeValue: { value: e.value, label: e.label }\r\n        //     });\r\n        // }\r\n        const handleStopChange = (e) => {\r\n            this.setState({\r\n                selectedStop: e.value,\r\n                stopValue: { value: e.value, label: e.label }\r\n            })\r\n        }\r\n        const handleAddTrack = () => {\r\n            this.props.addTrack(this.state.selectedRoute, this.state.selectedStop);\r\n            this.setState({\r\n                selectedRoute: null,\r\n                selectedStop: null,\r\n                routeValue: null,\r\n                stopValue: null,\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <p>{this.state.debug}</p>\r\n                {\r\n                    this.state.pick\r\n                        ? <p>{this.state.pick.value.age}</p>\r\n                        : <p>null</p>\r\n                }\r\n                <Autocomplete\r\n                    options={this.state.list}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"test\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { this.setState({ pick: newValue }, () => console.log(this.state.pick)); }}\r\n                    value={this.state.pick}\r\n                ></Autocomplete>\r\n                {\r\n                    this.state.selectedRoute\r\n                        ? <p>{this.state.selectedRoute.value.orig_tc}</p>\r\n                        : <p>null</p>\r\n                }\r\n                <Autocomplete\r\n                    options={this.state.showRoutes}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Route\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleRouteChange(newValue) }}\r\n                    value={this.state.selectedRoute}\r\n                ></Autocomplete>\r\n                {\r\n                    this.state.showStops\r\n                        ?\r\n                        this.state.showStops.map((pair) => (\r\n                            <p key={pair.value.stop}>{pair.value.name_tc}</p>\r\n                        ))\r\n                        :\r\n                        <p>null stops</p>\r\n                }\r\n                {\r\n                    this.state.testList\r\n                        ?\r\n                        this.state.testList.map((pair, index) => (\r\n                            <p key={index}>{pair.stop}</p>\r\n                        ))\r\n                        :\r\n                        <p>null stops</p>\r\n                }\r\n                {/* <Autocomplete\r\n                    options={this.state.showRoutes}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Route\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleRouteChange(newValue) }}\r\n                    value={this.state.routeValue}\r\n                ></Autocomplete>\r\n                <Autocomplete\r\n                    options={this.state.showStops}\r\n                    getOptionLabel={(option) => option.label}\r\n                    renderInput={(params) => <TextField {...params} label=\"Stop\" variant=\"outlined\" />}\r\n                    onChange={(e, newValue) => { handleStopChange(newValue) }}\r\n                    value={this.state.stopValue}\r\n                ></Autocomplete> */}\r\n                <Button disabled={this.state.selectedRoute == null || this.state.selectedStop == null} style={{ width: '100%' }} variant=\"outlined\" onClick={(e) => { handleAddTrack(e) }}>Add</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SelectorPanel;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass TrackItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            etas: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const updateEta = () => {\r\n            fetch(this.props.track.url)\r\n                .then(\r\n                    (res) => { return res.json() }\r\n                ).then((myJson) => {\r\n                    let data = myJson.data;\r\n                    let tmpEtas = [];\r\n                    let now = Date.now();\r\n                    data.forEach((record) => {\r\n                        if (record.dir === this.props.track.bound) {\r\n                            let tmpEta = Math.round((new Date(record.eta) - now) / 1000 / 60);\r\n                            if (tmpEta >= 0) {\r\n                                tmpEtas.push(tmpEta)\r\n                            }\r\n                        }\r\n                    });\r\n                    if (tmpEtas.length === 0) {\r\n                        tmpEtas.push(\"no car\");\r\n                    }\r\n                    this.setState({ etas: tmpEtas });\r\n                });\r\n        }\r\n        updateEta();\r\n        setInterval(() => {\r\n            updateEta();\r\n        }, 10000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div onContextMenu={() => { this.props.removeTrack(this.props.track.url) }} style={{ fontSize: \"10px\", marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n                <div style={{ width: \"20%\", margin: \"2.5%\", backgroundColor: \"lightgray\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n                    <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\" }}>{this.props.track.route}</div>\r\n                </div>\r\n                <div style={{ width: \"75%\", aspectRatio: \"3/1\" }}>{/*right section*/}\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n                        <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n                    </div>\r\n                    <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n                        <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n                            {this.props.track.stop}\r\n                        </div>\r\n                        <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n                            {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n                            <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n                            {\r\n                                this.state.etas.map((eta, index) => (\r\n                                    <div key={index} style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            // <div style={{marginBottom: \"10px\", borderRadius: \"12px\", aspectRatio: \"4/1\", width: \"100%\", maxWidth: \"12cm\", backgroundColor: \"lightsteelblue\", display: \"flex\", flexDirection: \"row\" }}> {/*a card*/}\r\n            //     <div style={{ backgroundColor: \"lightgray\", margin: \"12px\", borderRadius: \"50%\", aspectRatio: \"1/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*left section*/}\r\n            //         <div style={{ padding: \"10%\", fontSize: \"1.5em\", aspectRatio: \"1/1\"}}>{this.props.track.route}</div>\r\n            //     </div>\r\n            //     <div style={{ aspectRatio: \"3/1\" }}>{/*right section*/}\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>{/*right top*/}\r\n            //             <div style={{ fontSize: \"1.3em\" }}>{this.props.track.orig + \" -> \" + this.props.track.dest}</div>\r\n            //         </div>\r\n            //         <div style={{ aspectRatio: \"6/1\", display: \"flex\", alignItems: \"center\", flexDirection: \"row\", justifyContent: \"space-around\" }}>{/*right bottom*/}\r\n            //             <div style={{ fontSize: \"1.5em\" }}>{/*right bottom left*/}\r\n            //                 {this.props.track.stop}\r\n            //             </div>\r\n            //             <div style={{ width: \"30%\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>{/*right bottom right*/}\r\n            //                 {/* <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div>\r\n            //                 <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>12</div> */}\r\n            //                 {\r\n            //                     this.state.etas.map((eta) => (\r\n            //                         <div style={{ backgroundColor: \"lightblue\", padding: \"2.5px 5px\", borderRadius: \"7.5px\" }}>{eta}</div>\r\n            //                     ))\r\n            //                 }\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackItem;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport TrackItem from './TrackItem';\r\n\r\nclass TrackList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" ,padding: \"10px 0\"}}>\r\n                {\r\n                    this.props.tracks!==null\r\n                    ?\r\n                    this.props.tracks.map((track)=>(\r\n                        <TrackItem key={track.created} track={track} removeTrack={this.props.removeTrack}></TrackItem>\r\n                    ))\r\n                    :\"\"\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// import TrackItem from \"./TrackItem\";\r\nimport SelectorPanel from \"./SelectorPanel\";\r\nimport TrackList from \"./TrackList\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst routesUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route/\";\r\nconst stopsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/stop\"\r\nconst mappingsUrl = \"https://data.etabus.gov.hk/v1/transport/kmb/route-stop\";\r\n\r\nconst fetchData = (url) => {\r\n    return fetch(url)\r\n        .then(\r\n            (res) => { return res.json() }\r\n        )\r\n}\r\n\r\nconst initData = (THIS, targetName, url) => {\r\n    let ls = window.localStorage;\r\n    let item = ls.getItem(targetName)\r\n    if (item) {\r\n        console.log(\"load \" + targetName + \" from localStorage\");\r\n        THIS.setState({\r\n            [targetName]: JSON.parse(item)\r\n        })\r\n    } else {\r\n        if (url) {\r\n            console.log(\"load \" + targetName + \" from internet\");\r\n            fetchData(url).then(\r\n                (json) => {\r\n                    let data = json.data;\r\n                    ls.setItem(targetName, JSON.stringify(data));\r\n                    THIS.setState({\r\n                        [targetName]: data\r\n                    })\r\n                }\r\n            );\r\n        } else {\r\n            console.log(\"store empty \" + targetName + \" to localStorage\");\r\n            let data = [];\r\n            THIS.setState({\r\n                [targetName]: data\r\n            })\r\n            ls.setItem(targetName, JSON.stringify(data));\r\n        }\r\n    }\r\n    return Promise.resolve();\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            routes: null,\r\n            stops: null,\r\n            mappings: null,\r\n\r\n            tracks: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //init\r\n        initData(this, \"routes\", routesUrl).then(() => { this.setState({ showRoutes: this.state.routes }) });\r\n        initData(this, \"stops\", stopsUrl).then(() => { this.setState({ showStops: this.state.stops }) });\r\n        initData(this, \"mappings\", mappingsUrl);\r\n        initData(this, \"tracks\", null);\r\n    }\r\n    render() {\r\n        const notifyInfo = (msg) => toast.info(msg);\r\n        const notifyWarn = (msg) => toast.warn(msg);\r\n        const addTrack = (route, stop) => {\r\n            if (route !== null && stop !== null) {\r\n                let newTrack = {\r\n                    created: new Date(),\r\n                    route: route.route,\r\n                    orig: route.orig_tc,\r\n                    dest: route.dest_tc,\r\n                    stop: stop.name_tc,\r\n                    bound: route.bound,\r\n                    url: `https://data.etabus.gov.hk/v1/transport/kmb/eta/${stop.stop}/${route.route}/1`,\r\n                };\r\n                // console.log(newTrack);\r\n                let alreadyExists = false;\r\n                this.state.tracks.forEach(track => {\r\n                    if (track.url === newTrack.url && track.bound === newTrack.bound) {\r\n                        alreadyExists = true;\r\n                    }\r\n                });\r\n                if (!alreadyExists) {\r\n                    this.setState({ tracks: [...this.state.tracks, newTrack] }, () => { window.localStorage.setItem(\"tracks\", JSON.stringify(this.state.tracks)) });\r\n                } else {\r\n                    notifyWarn(\"track already exists\");\r\n                }\r\n            } else {\r\n                //err\r\n            }\r\n        }\r\n        const removeTrack = (url) => {\r\n            let tmpTracks = JSON.parse(JSON.stringify(this.state.tracks));\r\n            let removeTrackRoute;\r\n            tmpTracks.forEach((track) => {\r\n                    if (track.url === url) {\r\n                        removeTrackRoute = track.route;\r\n                        tmpTracks.splice(tmpTracks.indexOf(track), 1);\r\n                    }\r\n                })\r\n                // console.log(tmpTracks);\r\n            this.setState({ tracks: tmpTracks }, () => {\r\n                window.localStorage.setItem(\"tracks\", JSON.stringify(this.state.tracks));\r\n                notifyInfo(\"removed \" + removeTrackRoute + \" track\")\r\n            });\r\n        }\r\n        return ( <\r\n            >\r\n            <\r\n            code > Right - click card to remove < /code> <\r\n            br / >\r\n            <\r\n            code > Refresh rate: 10 s < /code> {\r\n            this.state.routes ? < SelectorPanel addTrack = { addTrack }\r\n            routes = { this.state.routes }\r\n            stops = { this.state.stops }\r\n            mappings = { this.state.mappings } > < /SelectorPanel> : \"\"} <\r\n            TrackList tracks = { this.state.tracks }\r\n            removeTrack = { removeTrack } > < /TrackList> <\r\n            ToastContainer position = \"bottom-center\"\r\n            autoClose = { 5000 }\r\n            hideProgressBar = { false }\r\n            newestOnTop = { false }\r\n            closeOnClick rtl = { false }\r\n            pauseOnFocusLoss draggable pauseOnHover /\r\n            >\r\n            <\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render( <\r\n    App / > ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}